# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    types: [opened]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: branch name
        run: |
          branch_name=$(echo "${GITHUB_HEAD_REF:-$GITHUB_REF}" | sed -e 's/refs\/heads\///')
          branch_name_length=${#branch_name}
          echo '!!! - ' + '${{ github.head_ref }}'
          echo $branch_name_length

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${github.head_ref})"
        id: extract_branch

      - name: Extract branch name length
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${#steps.extract_branch.outputs.branch})"
        id: extract_branch_length

      - name: Extract branch name length - 2
        id: getLength
        shell: bash
        run: |
          echo ${{ steps.extract_branch.outputs.extract_branch }}
          LL=$(echo ${{ steps.extract_branch.outputs.extract_branch }} | jq '. | length')
          echo "::set-output name=Label_length::$LL"

      - name: test
        run: |
          echo '!!!!' + ${{ steps.getLength.outputs.Label_length }}
          echo '!!!!' + ${{ steps.extract_branch.outputs.extract_branch }}
          echo '!!!!' + ${{ steps.extract_branch.outputs.branch }}

      - name: Post a comment
        uses: actions/github-script@v4
        with:
          fetch-depth: 2
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })

